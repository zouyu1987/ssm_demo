<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

       <!-- 配置整合mybatis-->
       <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
              <property name="locations">
                     <list>
                            <value>classpath*:jdbc.properties</value>
                     </list>
              </property>
       </bean>


       <!--配置数据库的连接池-->
       <!-- 配置主连接池 -->
       <bean id="masterDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
              <!-- 基本属性 url、user、password -->
              <property name="url" value="${jdbc.master.url}" />
              <property name="username" value="${jdbc.master.username}" />
              <property name="password" value="${jdbc.master.password}" />
              <!-- 配置初始化大小、最小、最大 -->
              <property name="initialSize" value="1" />
              <property name="minIdle" value="1" />
              <property name="maxActive" value="20" />
              <!-- 配置获取连接等待超时的时间 -->
              <property name="maxWait" value="60000" />
              <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
              <property name="timeBetweenEvictionRunsMillis" value="60000" />
              <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
              <property name="minEvictableIdleTimeMillis" value="300000" />
              <property name="validationQuery" value="SELECT 'x'" />
              <property name="testWhileIdle" value="true" />
              <property name="testOnBorrow" value="false" />
              <property name="testOnReturn" value="false" />
              <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
              <property name="poolPreparedStatements" value="false" />
              <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
              <!-- 配置监控统计拦截的filters 防御SQL注入攻击 -->
              <property name="filters" value="stat,wall" />
       </bean>

       <!-- 配置从连接池 -->
       <bean id="slave01DataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
              <!-- 基本属性 url、user、password -->
              <property name="url" value="${jdbc.slave.url}" />
              <property name="username" value="${jdbc.slave.username}" />
              <property name="password" value="${jdbc.slave.password}" />
              <!-- 配置初始化大小、最小、最大 -->
              <property name="initialSize" value="1" />
              <property name="minIdle" value="1" />
              <property name="maxActive" value="20" />
              <!-- 配置获取连接等待超时的时间 -->
              <property name="maxWait" value="60000" />
              <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
              <property name="timeBetweenEvictionRunsMillis" value="60000" />
              <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
              <property name="minEvictableIdleTimeMillis" value="300000" />
              <property name="validationQuery" value="SELECT 'x'" />
              <property name="testWhileIdle" value="true" />
              <property name="testOnBorrow" value="false" />
              <property name="testOnReturn" value="false" />
              <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
              <property name="poolPreparedStatements" value="false" />
              <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
              <!-- 配置监控统计拦截的filters 防御SQL注入攻击 -->
              <property name="filters" value="stat,wall" />
       </bean>

       <!-- 定义数据源，使用自己实现的数据源 -->
       <bean id="dataSource" class="com.zy.ssm.util.datasource.DynamicDataSource">
              <!-- 设置多个数据源 -->
              <property name="targetDataSources">
                     <map key-type="java.lang.String">
                            <!-- 这个key需要和程序中的key一致 -->
                            <entry key="master" value-ref="masterDataSource"/>
                            <entry key="slave" value-ref="slave01DataSource"/>
                     </map>
              </property>
              <!-- 设置默认的数据源，这里默认走写库 -->
              <property name="defaultTargetDataSource" ref="masterDataSource"/>
       </bean>


       <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
              <!-- 注入数据库连接池-->
              <property name="dataSource" ref="dataSource"/>
              <!-- 配置Mybatisq全局文件：-->
              <property name="configLocation" value="classpath:mybatis-config.xml"/>

              <!-- 扫描entity包-->
              <property name="typeAliasesPackage" value="com.zy.ssm.entity"/>
              <!-- 扫描sql配置文件-->
              <property name="mapperLocations" value="classpath:mapper/*.xml"/>
       </bean>

       <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
              <!-- 注入sqlSessionFactory-->
              <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
              <!-- 给出扫描Dao接口包-->
              <property name="basePackage" value="com.zy.ssm.dao"/>
       </bean>

</beans>